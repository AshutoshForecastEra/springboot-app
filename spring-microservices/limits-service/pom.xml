<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<parent>
		<groupId>com.github.abhinavmishra14</groupId>
		<artifactId>spring-microservices</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>
	
	<artifactId>limits-service</artifactId>
	<name>Limits Service sprint boot app</name>
	<description>Demo Limits-Service Microservice project</description>
	<packaging>jar</packaging>
	
	<properties>
	    <baseDirectory>${project.parent.basedir}</baseDirectory>
	</properties>
	
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>
		
		<!-- Creating proxy for Load balancing using Ribbon. -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>
		
		<!-- Load balancing -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-ribbon</artifactId>
		</dependency>
		
		<!-- Naming server discovery client -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
			<!-- Note: spring-cloud-starter-netflix-eureka-client uses jackson-dataformat-xml.
                 Hence, you would see XML responses instead of JSON responses in the browser.
                 To see JSON responses, added exclusion for jackson-dataformat-xml dependency. -->
			<exclusions>
				<exclusion>
					<groupId>com.fasterxml.jackson.dataformat</groupId>
					<artifactId>jackson-dataformat-xml</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<!-- Distributed tracing, sleuth assigns id to each request and same id will be used
		     in all inter microservices communication requests, which makes it easy to trace logs mapped to an id. 
		     Make sure you include %X{X-B3-TraceId},%X{X-B3-SpanId} this in the PatternLayout pattern configuration for logging in order to see the IDs -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-sleuth</artifactId>
		</dependency>
			
		<!-- To generate messages in the format expected by zipkin -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-zipkin</artifactId>
		</dependency>
		
		<!-- To send traces to with zipkin via rabbit mq -->
		<dependency>
			<groupId>org.springframework.amqp</groupId>
			<artifactId>spring-rabbit</artifactId>
		</dependency>
		<!-- Distributed tracing [End] -->
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		
		<!-- Dependency for swagger open api v3 [Start]-->
		<!-- The Swagger UI page should then be available at: http://server:port/context-path/swagger-ui.html 
		     and the OpenAPI description will be available at the following url for json format: 
		     http://server:port/context-path/v3/api-docs
		 -->
		<dependency>
	      <groupId>org.springdoc</groupId>
	      <artifactId>springdoc-openapi-ui</artifactId>
	      <version>${springdoc-openapi-version}</version>
	    </dependency>
		<!-- The support for Spring Hateoas is available using the dependency springdoc-openapi-hateoas. 
			The projects that use Spring Hateoas should combine this dependency with 
			the springdoc-openapi-ui dependency. This dependency enables the support 
			of Spring Hateoas format. -->
	    <dependency>
	      <groupId>org.springdoc</groupId>
	      <artifactId>springdoc-openapi-hateoas</artifactId>
	      <version>${springdoc-openapi-version}</version>
	    </dependency>
		<!-- Dependency for swagger open api v3 [End]-->
	</dependencies>

</project>
