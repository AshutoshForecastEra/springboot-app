#Logging
logging.level.web=debug

spring.application.name=currency-exchange-service
server.port=8000

exchange.rate.fallback.uri=https://api.exchangeratesapi.io/latest?base={0}&symbols={1}

########################################### H2 and JPA [Start] #############################################################
#use http://localhost:8000/h2-console to connect to h2 console
spring.h2.console.enabled=true
spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=update

#Enable this log to see what values are being saves/extracted via hibernate sql query
#logging.level.org.hibernate.type=TRACE

########################################### H2 and JPA [End] ###############################################################

#Ribbon will use the list of servers from here to distribute the load and CurrencyConversionProxy would no longer need to hardcode the server url for FeignClient
#limits-service.ribbon.listOfServers=http://localhost:8080,http://localhost:8081,http://localhost:8082

#When talking to eureka naming server (see config 'eureka.client.service-url.default-zone' below), this 'limits-service.ribbon.listOfServers' config 
# is not required as currency conversion service, currency exchange service, limits service etc. have registered them with eureka naming server.
#How connection to limits service is working now? -> Earlier ribbon was dependent on 'limits-service.ribbon.listOfServers' config
# to connect to limits service, when we integrated with netflix eureka naming server, 
# now Ribbon will talk to naming server instead of directly depending on 'limits-service.ribbon.listOfServers' config.
#Ribbon will ask naming server (eureka), what all instances of limits-service are registered with you. Eureka will return the list
# of registered limits-service instances. Now ribbon will invoke the instances by balancing the load.

#As we know, Ribbon is a client-side load balancer that gives you a lot of control over the behavior of HTTP and TCP clients.

#Connecting api gateway to eureka
#eureka.client.service-url.default-zone=http://localhost:8761/eureka
#Either above url or this format of URL: eureka.client.serviceUrl.defaultZone.
#Note that above URL doesn't work when containerized for some reason
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
